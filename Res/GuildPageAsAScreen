from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.floatlayout import FloatLayout
from kivy.uix.button import Button
from kivy.uix.textinput import TextInput
from kivy.uix.scrollview import ScrollView
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.properties import StringProperty
from kivy.uix.dropdown import DropDown
from kivy.uix.togglebutton import ToggleButton
from kivy.core.window import Window



class GuildScreen(Screen):
    def __init__(self, **kwargs):
        super(GuildScreen, self).__init__(**kwargs)

        self.title = 'GuildMenu'
        layout = FloatLayout()
        Window.clearcolor = (0, 0, 0, 0)

        search_input = TextInput(
            hint_text='Search for a guild...',
            size_hint=(None, None),
            size=(770, 50),
            pos_hint={'x': 0.3, 'y': 0.95}
        )

        submit = Button(
            text="Search",
            size_hint=(None, None),
            size=(200, 50),
            pos_hint={'x': 0.7, 'y': 0.95},
        )
        class ScrollableLabel(ScrollView):
            text = StringProperty('')

            def __init__(self, **kwargs):
                super(ScrollableLabel, self).__init__(**kwargs)
                self.label = Label(text='', color=(1, 0, 0, 1), font_size=(100))
                self.label.bind(size=self._update_label)
                self.add_widget(self.label)

            def _update_label(self, instance, value):
                self.label.text_size = (self.width, None)
                self.label.texture_update()
                self.height = self.label.texture_size[1]

            def update_text(self, new_text):
                self.label.text += '\n' + new_text

        class ChatPage(BoxLayout):
            def __init__(self, **kwargs):
                super(ChatPage, self).__init__(**kwargs)
                self.orientation = 'vertical'
                self.size_hint_y = 0.5  # Set a fixed height ratio (adjust as needed)

                self.history = ScrollableLabel(height=Window.size[1] * 0.3, size_hint_y=None)
                self.new_message = TextInput(width=Window.size[0] * 0.8, size_hint_x=None, height=Window.size[1] * 0.1,
                                            size_hint_y=None, multiline=False, hint_text='Type a message here...')
                self.send = Button(text="Send", size_hint_y=None, height=self.new_message.height)
                self.send.bind(on_release=self.on_send_message)

                bottom_line = BoxLayout(orientation='horizontal', size_hint_y=None, height=self.new_message.height)
                bottom_line.add_widget(self.new_message)
                bottom_line.add_widget(self.send)

                self.add_widget(self.history)
                self.add_widget(bottom_line)

            def on_send_message(self, instance):
                message = self.new_message.text
                if message:
                    self.history.update_text(message)
                    self.new_message.text = ""
        class ImageButtons:
            profile_button = Button(
                background_normal='UserProfileButton.png',
                pos_hint={'x': .9, 'y': 0.9},
                size_hint=(None, None)
            )

            toggle_button = ToggleButton(
                color=(1, 0, .65, 1),
                background_normal='ToggleButton1.png',
                background_down='ToggleButton2.png',
                size=(700, 100),
                pos_hint={'x': .35, 'y': 0.8},
                size_hint=(None, None),
            )

            board_dimension_text_label = Label(
                text='Board Dimension',
                font_size=30,
                pos_hint={'center_x': 0.5, 'center_y': 0.92}
            )

            view_guild_members = Button(
                background_normal='DropdownMenuButton.png',
                size=(400, 100),
                size_hint=(None, None),
                pos_hint={'x': 0.8, 'y': 0.8}
            )

            @staticmethod
            def on_view_guild_members_press(instance):
                instance.background_color = (0, 1, 0, 1)  # Change the color when pressed

            @staticmethod
            def on_view_guild_members_release(instance):
                instance.background_color = (1, 1, 1, 1)  # Reset to the original color

        class GuildBannerMenu:
            create_guild = Button(
                text="+ Guild",
                font_size=(100),
                size_hint=(None, None),
                size=(500, 200),
                pos_hint={'x': 0.0, 'y': 0.8},
            )

            my_guilds = Button(
                text="My Guild",
                font_size=(100),
                size_hint=(None, None),
                size=(500, 200),
                pos_hint={'x': 0.0, 'y': 0.7},
            )
            people = Button(
                text="My People",
                font_size=(100),
                size_hint=(None, None),
                size=(500, 200),
                pos_hint={'x': 0.0, 'y': 0.6},
            )

        dropdown = DropDown()
        for index in range(10):
            btn = Button(text=f"User {index + 1}", size_hint_y=None, height=40)
            btn.bind(on_release=lambda btn: dropdown.select(btn.text))
            dropdown.add_widget(btn)

        ImageButtons.view_guild_members.bind(on_press=ImageButtons().on_view_guild_members_press)
        ImageButtons.view_guild_members.bind(on_release=ImageButtons().on_view_guild_members_release)
        dropdown.bind(on_select=lambda instance, x: setattr(ImageButtons.view_guild_members, 'text', x))

        chat_screen = ChatPage(
            pos_hint={'x': 0.3, 'y': 0.0},
        )

        history = ScrollableLabel(
            pos_hint={'x': 0.5, 'y': 0.15},
            size_hint=(None, None),
            size=(Window.size[0], Window.size[1] * 0.3),
        )

        layout.add_widget(search_input)
        layout.add_widget(submit)
        layout.add_widget(ImageButtons.profile_button)
        layout.add_widget(ImageButtons.toggle_button)
        layout.add_widget(ImageButtons.board_dimension_text_label)
        layout.add_widget(ImageButtons.view_guild_members)
        layout.add_widget(GuildBannerMenu.create_guild)
        layout.add_widget(GuildBannerMenu.my_guilds)
        layout.add_widget(GuildBannerMenu.people)
        layout.add_widget(chat_screen)
        layout.add_widget(history)

        self.add_widget(layout)

class MyScreenManager(ScreenManager):
    pass

class GuildApp(App):
    def build(self):
        sm = MyScreenManager()
        sm.add_widget(GuildScreen(name='guild_screen'))
        return sm

if __name__ == '__main__':
    GuildApp().run()
